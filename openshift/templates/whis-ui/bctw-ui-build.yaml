---
kind: Template
apiVersion: v1
metadata:
  name: "${NAME}-build-template"
  creationTimestamp: 
objects:
- kind: Pipeline
  apiVersion: tekton.dev/v1beta1
  metadata:
    name: "${NAME}-build-and-deploy"
  spec:    
    workspaces:
    - name: shared-workspace
    params:
    - name: deployment-name
      type: string
      description: name of the deployment to be patched
      default: "${NAME}"
    - name: git-url
      type: string
      description: url of the git repo for the code of deployment
      default: "${GIT_REPO_URL}"
    - name: git-revision
      type: string
      description: revision to be used from repo of the code for deployment
      default: "main"
    - name: IMAGE
      type: string
      description: image to be build from the code
      default: "${NAME}"
    tasks:
    - name: fetch-repository
      taskRef: 
        name: git-clone
        kind: ClusterTask
      workspaces:
      - name: output
        workspace: shared-workspace
      params:
      - name: url
        value: $(params.git-url)
      - name: subdirectory
        value: ""
      - name: deleteExisting
        value: "true"
      - name: revision
        value: $(params.git-revision)
    - name: build-image
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
      - name: IMAGE
        value: $(params.IMAGE)
      workspaces:
      - name: source
        workspace: shared-workspace
      runAfter:
      - fetch-repository
    - name: apply-manifests
      taskRef:
        name: apply-manifests
      workspaces:
      - name: source
        workspace: shared-workspace
      runAfter:
      - build-image
    - name: update-deployment
      taskRef:
        name: update-deployment
      params:
      - name: deployment
        value: $(params.deployment-name)
      - name: IMAGE
        value: $(params.IMAGE)
      runAfter:
      - apply-manifests  
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
  spec:
    triggers:
    - type: ImageChange
    - type: ConfigChange
    runPolicy: Serial
    source:
      type: Git
      git:
        uri: "${GIT_REPO_URL}"
        ref: "${GIT_REF}"
      contextDir: "${SOURCE_CONTEXT_DIR}"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: "${SOURCE_IMAGE_KIND}"
          name: "${SOURCE_IMAGE_NAME}:${SOURCE_IMAGE_TAG}"
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:${OUTPUT_IMAGE_TAG}"
    resources:
      requests:
        cpu: "${CPU_REQUEST}"
        memory: "${MEMORY_REQUEST}"
      limits:
        cpu: "${CPU_LIMIT}"
        memory: "${MEMORY_LIMIT}"
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the resources defined in this template.
  required: true
  value: whis-ui
- name: GIT_REPO_URL
  displayName: Git Repo URL
  description: The URL to your GIT repo.
  required: true
  value: https://github.com/bcgov/whis-ui.git
- name: GIT_REF
  displayName: Git Reference
  description: The git reference or branch.
  required: true
  value: main
- name: SOURCE_CONTEXT_DIR
  displayName: Source Context Directory
  description: The source context directory.
  required: false
- name: SOURCE_IMAGE_KIND
  displayName: Source Image Kind
  description: The 'kind' (type) of the  source image; typically ImageStreamTag, or DockerImage.
  required: true
  value: DockerImage
- name: SOURCE_IMAGE_NAME
  displayName: Source Image Name
  description: The name of the source image.
  required: true
  value: centos/nodejs-12-centos7
- name: SOURCE_IMAGE_TAG
  displayName: Source Image Tag
  description: The tag of the source image.
  required: true
  value: latest
- name: OUTPUT_IMAGE_TAG
  displayName: Output Image Tag
  description: The tag given to the built image.
  required: true
  value: latest
- name: CPU_REQUEST
  displayName: Resources CPU Request
  description: The resources CPU request (in cores) for this build.
  required: true
  value: 10m
- name: CPU_LIMIT
  displayName: Resources CPU Limit
  description: The resources CPU limit (in cores) for this build.
  required: true
  value: 1000m
- name: MEMORY_REQUEST
  displayName: Resources Memory Request
  description: The resources Memory request (in Mi, Gi, etc) for this build.
  required: true
  value: 10Mi
- name: MEMORY_LIMIT
  displayName: Resources Memory Limit
  description: The resources Memory limit (in Mi, Gi, etc) for this build.
  required: true
  value: 2Gi
